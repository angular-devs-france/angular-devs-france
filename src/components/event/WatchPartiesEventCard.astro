---
import { isDefined } from "@anthonypena/fp";
import dayjs from "dayjs";
import { type IWatchPartiesEvent } from "../../models/event.model";
import { Image } from "astro:assets";

import "dayjs/locale/fr";
import LinkCard from "./fragment/LinkCard.astro";
import SimpleCard from "./fragment/SimpleCard.astro";

interface Props {
  event: IWatchPartiesEvent;
  isPast?: boolean;
}

const { event, isPast } = Astro.props;
dayjs.locale("fr");
const displayDate = dayjs(event.date).format("DD MMM");
const Card = (
  isDefined(event.link) ? LinkCard : SimpleCard
) as typeof LinkCard & typeof SimpleCard;
---

<Card link={event.youtube}>
  <div class="flex flex-row sm:flex-col gap-2">
    <div
      class="rounded-2xl bg-neutral-300 p-2 sm:p-4 flex justify-center items-center gap-4 min-w-[50px] sm:min-w-[180px] w-full"
    >
      <div class="uppercase">{displayDate}</div>
      {!isPast && <div class="font-bold sm:text-xl">{event.startTime}</div>}
    </div>
    <div
      class="rounded-2xl bg-[#383e97] p-2 sm:p-4 flex flex-col justify-center items-center w-full"
    >
      <div class="font-bold text-white uppercase">{event.type}</div>
    </div>
  </div>
  <div class="px-4 flex-1">
    <h3 id="title" class="font-bold text-2xl">{event.title}</h3>
  </div>
  <div class="flex flex-wrap gap-2">
    {
      event.avatars &&
        event.avatars.map((avatar) => (
          <Image
            class="rounded-2xl h-[124px] block sm:hidden lg:block"
            src={avatar || ""}
            alt={event.title}
            width={124}
            height={124}
          />
        ))
    }
  </div>
  <div class="flex items-center">
    <ul>
      {
        event.cities
          .filter((city) => isDefined(city.link))
          .map((city) => (
            <li>
              <a
                href={city.link}
                class="text-[#383e97] hover:text-current"
                target="_blank"
              >
                {city.city}
              </a>
            </li>
          ))
      }
    </ul>
  </div>
</Card>
